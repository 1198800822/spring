<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<context:component-scan base-package="com.sundd.myspring"></context:component-scan>

	<bean id="config"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${user.dir}/resources/jedis.properties</value>
				<value>file:${user.dir}/resources/db.properties</value>
			</list>
		</property>
	</bean>

	<!-- jedis相关配置开始 -->
	<bean id="jedispoolconfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${jedis.pool.maxtotal}"></property>
		<property name="maxIdle" value="${jedis.pool.maxidle}"></property>
		<property name="minIdle" value="${jedis.pool.minidle}"></property>
		<property name="maxWaitMillis" value="${jedis.pool.MaxWaitMillis}"></property>
	</bean>
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="poolConfig" ref="jedispoolconfig"></constructor-arg>
		<constructor-arg name="host" value="${jedis.server.ip}"></constructor-arg>
		<constructor-arg name="port" value="${jedis.server.port}"></constructor-arg>
		<constructor-arg name="timeout" value="${jedis.pool.timeout}"></constructor-arg>
		<constructor-arg name="password" value="${jedis.server.auth}"></constructor-arg>
	</bean>
	<bean id="jedisProp"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="com.sundd.myspring.util.ProperUtils" />
		<property name="targetMethod" value="getProp" />
		<property name="arguments">
			<list>
				<value>${user.dir}/resources/jedis.properties</value>
			</list>
		</property>
	</bean>
	<!-- jedis相关配置结束 -->

	<!-- 数据库相关配置开始 -->
	<!-- 数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="${db.driverClass}" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="${db.jdbcUrl}" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="${db.user}" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="${db.password}" />

		<!-- 指定连接数据库连接池的最大连接数 -->
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<!-- 指定连接数据库连接池的最小连接数 -->
		<property name="minPoolSize" value="${db.minPoolSize}" />
		<!-- 指定连接数据库连接池的初始化连接数 -->
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<!-- 指定连接数据库连接池的连接的最大空闲时间 -->
		<property name="maxIdleTime" value="${db.maxIdleTime}" />
	</bean>
	<!-- mybatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="typeAliasesPackage" value="com.sundd.myspring.pojo"></property>
		<property name="mapperLocations">
			<list>
				<value>mappers/*.xml</value>
			</list>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sundd.myspring.mapper"></property>
	</bean>
	<!-- spring事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 数据库相关配置结束 -->

	<!-- ehCache缓存开始 -->
	<bean id="ehcache"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		lazy-init="false">
		<property name="configLocation">
			<value>file:${user.dir}/resources/springEhcache.xml</value>
		</property>
	</bean>
	<bean id="userCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="ehcache"></property>
		<property name="cacheName" value="userCache"></property>
	</bean>
	<bean id="orderCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="ehcache"></property>
		<property name="cacheName" value="userCache"></property>
	</bean>
	<!-- ehcache缓存结束 -->

	<!-- springTask定时任务开始 -->
	<task:annotation-driven scheduler="scheduler" />
	<task:scheduler id="scheduler" pool-size="5" />
	<!-- 定时任务结束 -->

	<!-- 日志相关配置 -->
	<bean id="log4jConfigurer"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.apache.log4j.PropertyConfigurator" />
		<property name="targetMethod" value="configure" />
		<property name="arguments">
			<list>
				<value>${user.dir}/resources/log4j.properties</value>
			</list>
		</property>
	</bean>
</beans>