<?xml version="1.0" encoding="UTF-8" ?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="../config/ehcache.xsd"
	updateCheck="false"
	name="springCache">

	<diskStore path="java.io.tmdir" />
	<defaultCache 
		maxElementsInMemory="10000" 
		maxElementsOnDisk="10000000"
		eternal="false"
		timeToIdleSeconds="120" 
		timeToLiveSeconds="120" 
		overflowToDisk="false"
		diskSpoolBufferSizeMB="30" 
		diskPersistent="false" 
		diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU">
	</defaultCache>
	
<!-- maxElementsInMemory: 缓存中允许创建的最大对象数 -->
<!-- maxElementsOnDisk: 磁盘上允许存储的最大对象数-->
<!-- eternal: 设置元素是否永久有效，如果是，将忽略超时设置timeToIdleSeconds和timeToLiveSeconds-->
<!-- timeToIdleSeconds: 设置元素消亡的最大时间，即在这段时间内没有被访问，则消亡-->
<!-- timeToLiveSeconds: 设置元素消亡的最大时间，即在这段时间内没有被访问，则消亡-->
<!-- overflowToDisk: 设置当内存中对象数目达到 maxElementsInMemory 时，是否把溢出的对象存入磁盘-->
<!-- diskSpoolBufferSizeMB: 磁盘缓冲区大小，默认为30MB-->
<!-- diskPersistent: 是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false-->
<!-- diskExpiryThreadIntervalSeconds: 磁盘失效线程运行间隔-->
<!-- memoryStoreEvictionPolicy: 当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去删除对象。可选策略有LRU（最近最少使用）、FIFO（先进先出）等-->
<!-- diskExpiry: 是否开启磁盘过期时间-->
<!-- maxEntriesLocalDisk: 是否启用DiskStore路径下的最大对象数限制-->

</ehcache>